[
  {
    "args": [
      "clone",
      "https://github.com/google/oss-fuzz.git",
      "--depth",
      "1"
    ],
    "name": "gcr.io/cloud-builders/git"
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "args": [
      "build",
      "--tag",
      "gcr.io/oss-fuzz/test-project",
      "--tag",
      "us-central1-docker.pkg.dev/oss-fuzz/unsafe/test-project",
      "oss-fuzz/projects/test-project"
    ],
    "id": "build-UNIQUE_ID"
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "srcmap > /workspace/srcmap.json && cat /workspace/srcmap.json"
    ],
    "env": [
      "OSSFUZZ_REVISION=$REVISION_ID",
      "FUZZING_LANGUAGE=c++"
    ],
    "id": "srcmap"
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "args": [
      "run",
      "--privileged",
      "linuxkit/binfmt:v0.8"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "args": [
      "buildx",
      "create",
      "--name",
      "buildxbuilder"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "args": [
      "buildx",
      "use",
      "buildxbuilder"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "args": [
      "buildx",
      "build",
      "--platform",
      "linux/arm64",
      "--progress",
      "plain",
      "--load",
      "--tag",
      "gcr.io/oss-fuzz/test-project-aarch64",
      "--tag",
      "us-central1-docker.pkg.dev/oss-fuzz/unsafe/test-project-aarch64",
      "oss-fuzz/projects/test-project"
    ],
    "id": "build-UNIQUE_ID"
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=afl",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/afl-address-x86_64",
      "SANITIZER=address"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=x86_64",
      "-e",
      "FUZZING_ENGINE=afl",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/afl-address-x86_64",
      "-e",
      "SANITIZER=address",
      "-t",
      "gcr.io/oss-fuzz/test-project",
      "bash",
      "-c",
      "rm -r /out && cd /src && cd /src && mkdir -p /workspace/out/afl-address-x86_64 && compile || (echo \"********************************************************************************\\nFailed to build.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer address --engine afl --architecture x86_64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "compile-afl-address-x86_64"
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=afl",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/afl-address-x86_64",
      "SANITIZER=address"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=x86_64",
      "-e",
      "FUZZING_ENGINE=afl",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/afl-address-x86_64",
      "-e",
      "SANITIZER=address",
      "-t",
      "gcr.io/oss-fuzz-base/base-runner",
      "bash",
      "-c",
      "test_all.py || (echo \"********************************************************************************\\nBuild checks failed.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer address --engine afl --architecture x86_64 test-project\\npython infra/helper.py check_build --sanitizer address --engine afl --architecture x86_64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "build-check-afl-address-x86_64"
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=afl",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/afl-address-x86_64",
      "SANITIZER=address"
    ],
    "args": [
      "bash",
      "-c",
      "targets_list > /workspace/targets.list.address"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "cd /workspace/out/afl-address-x86_64 && zip -r test-project-address-202001010000.zip *"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/srcmap.json",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/out/afl-address-x86_64/test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/targets.list.address",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/curl",
    "args": [
      "-H",
      "Content-Type: text/plain",
      "-X",
      "PUT",
      "-d",
      "test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "rm -r /workspace/out/afl-address-x86_64"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=centipede",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/centipede-address-x86_64",
      "SANITIZER=address"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=x86_64",
      "-e",
      "FUZZING_ENGINE=centipede",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/centipede-address-x86_64",
      "-e",
      "SANITIZER=address",
      "-t",
      "gcr.io/oss-fuzz/test-project",
      "bash",
      "-c",
      "rm -r /out && cd /src && cd /src && mkdir -p /workspace/out/centipede-address-x86_64 && compile || (echo \"********************************************************************************\\nFailed to build.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer address --engine centipede --architecture x86_64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "compile-centipede-address-x86_64"
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=centipede",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/centipede-address-x86_64",
      "SANITIZER=address"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=x86_64",
      "-e",
      "FUZZING_ENGINE=centipede",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/centipede-address-x86_64",
      "-e",
      "SANITIZER=address",
      "-t",
      "gcr.io/oss-fuzz-base/base-runner",
      "bash",
      "-c",
      "test_all.py || (echo \"********************************************************************************\\nBuild checks failed.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer address --engine centipede --architecture x86_64 test-project\\npython infra/helper.py check_build --sanitizer address --engine centipede --architecture x86_64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "build-check-centipede-address-x86_64"
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=centipede",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/centipede-address-x86_64",
      "SANITIZER=address"
    ],
    "args": [
      "bash",
      "-c",
      "targets_list > /workspace/targets.list.address"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "cd /workspace/out/centipede-address-x86_64 && zip -r test-project-address-202001010000.zip *"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/srcmap.json",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/out/centipede-address-x86_64/test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/targets.list.address",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/curl",
    "args": [
      "-H",
      "Content-Type: text/plain",
      "-X",
      "PUT",
      "-d",
      "test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "rm -r /workspace/out/centipede-address-x86_64"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=centipede",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/centipede-none-x86_64",
      "SANITIZER=none"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=x86_64",
      "-e",
      "FUZZING_ENGINE=centipede",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/centipede-none-x86_64",
      "-e",
      "SANITIZER=none",
      "-t",
      "gcr.io/oss-fuzz/test-project",
      "bash",
      "-c",
      "rm -r /out && cd /src && cd /src && mkdir -p /workspace/out/centipede-none-x86_64 && compile || (echo \"********************************************************************************\\nFailed to build.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer none --engine centipede --architecture x86_64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "compile-centipede-none-x86_64"
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=centipede",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/centipede-none-x86_64",
      "SANITIZER=none"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=x86_64",
      "-e",
      "FUZZING_ENGINE=centipede",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/centipede-none-x86_64",
      "-e",
      "SANITIZER=none",
      "-t",
      "gcr.io/oss-fuzz-base/base-runner",
      "bash",
      "-c",
      "test_all.py || (echo \"********************************************************************************\\nBuild checks failed.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer none --engine centipede --architecture x86_64 test-project\\npython infra/helper.py check_build --sanitizer none --engine centipede --architecture x86_64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "build-check-centipede-none-x86_64"
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=centipede",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/centipede-none-x86_64",
      "SANITIZER=none"
    ],
    "args": [
      "bash",
      "-c",
      "targets_list > /workspace/targets.list.none"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "cd /workspace/out/centipede-none-x86_64 && zip -r test-project-none-202001010000.zip *"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/srcmap.json",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/out/centipede-none-x86_64/test-project-none-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/targets.list.none",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/curl",
    "args": [
      "-H",
      "Content-Type: text/plain",
      "-X",
      "PUT",
      "-d",
      "test-project-none-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "rm -r /workspace/out/centipede-none-x86_64"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=honggfuzz",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/honggfuzz-address-x86_64",
      "SANITIZER=address"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=x86_64",
      "-e",
      "FUZZING_ENGINE=honggfuzz",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/honggfuzz-address-x86_64",
      "-e",
      "SANITIZER=address",
      "-t",
      "gcr.io/oss-fuzz/test-project",
      "bash",
      "-c",
      "rm -r /out && cd /src && cd /src && mkdir -p /workspace/out/honggfuzz-address-x86_64 && compile || (echo \"********************************************************************************\\nFailed to build.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer address --engine honggfuzz --architecture x86_64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "compile-honggfuzz-address-x86_64"
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=honggfuzz",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/honggfuzz-address-x86_64",
      "SANITIZER=address"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=x86_64",
      "-e",
      "FUZZING_ENGINE=honggfuzz",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/honggfuzz-address-x86_64",
      "-e",
      "SANITIZER=address",
      "-t",
      "gcr.io/oss-fuzz-base/base-runner",
      "bash",
      "-c",
      "test_all.py || (echo \"********************************************************************************\\nBuild checks failed.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer address --engine honggfuzz --architecture x86_64 test-project\\npython infra/helper.py check_build --sanitizer address --engine honggfuzz --architecture x86_64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "build-check-honggfuzz-address-x86_64"
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=honggfuzz",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/honggfuzz-address-x86_64",
      "SANITIZER=address"
    ],
    "args": [
      "bash",
      "-c",
      "targets_list > /workspace/targets.list.address"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "cd /workspace/out/honggfuzz-address-x86_64 && zip -r test-project-address-202001010000.zip *"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/srcmap.json",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/out/honggfuzz-address-x86_64/test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/targets.list.address",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/curl",
    "args": [
      "-H",
      "Content-Type: text/plain",
      "-X",
      "PUT",
      "-d",
      "test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "rm -r /workspace/out/honggfuzz-address-x86_64"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-address-x86_64",
      "SANITIZER=address"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=x86_64",
      "-e",
      "FUZZING_ENGINE=libfuzzer",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/libfuzzer-address-x86_64",
      "-e",
      "SANITIZER=address",
      "-t",
      "gcr.io/oss-fuzz/test-project",
      "bash",
      "-c",
      "rm -r /out && cd /src && cd /src && mkdir -p /workspace/out/libfuzzer-address-x86_64 && compile || (echo \"********************************************************************************\\nFailed to build.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer address --engine libfuzzer --architecture x86_64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "compile-libfuzzer-address-x86_64"
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-address-x86_64",
      "SANITIZER=address"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=x86_64",
      "-e",
      "FUZZING_ENGINE=libfuzzer",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/libfuzzer-address-x86_64",
      "-e",
      "SANITIZER=address",
      "-t",
      "gcr.io/oss-fuzz-base/base-runner",
      "bash",
      "-c",
      "test_all.py || (echo \"********************************************************************************\\nBuild checks failed.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer address --engine libfuzzer --architecture x86_64 test-project\\npython infra/helper.py check_build --sanitizer address --engine libfuzzer --architecture x86_64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "build-check-libfuzzer-address-x86_64"
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-address-x86_64",
      "SANITIZER=address"
    ],
    "args": [
      "bash",
      "-c",
      "targets_list > /workspace/targets.list.address"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "cd /workspace/out/libfuzzer-address-x86_64 && zip -r test-project-address-202001010000.zip *"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/srcmap.json",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/out/libfuzzer-address-x86_64/test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/targets.list.address",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/curl",
    "args": [
      "-H",
      "Content-Type: text/plain",
      "-X",
      "PUT",
      "-d",
      "test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "rm -r /workspace/out/libfuzzer-address-x86_64"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=i386",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-address-i386",
      "SANITIZER=address"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=i386",
      "-e",
      "FUZZING_ENGINE=libfuzzer",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/libfuzzer-address-i386",
      "-e",
      "SANITIZER=address",
      "-t",
      "gcr.io/oss-fuzz/test-project",
      "bash",
      "-c",
      "rm -r /out && cd /src && cd /src && mkdir -p /workspace/out/libfuzzer-address-i386 && compile || (echo \"********************************************************************************\\nFailed to build.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer address --engine libfuzzer --architecture i386 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "compile-libfuzzer-address-i386"
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=i386",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-address-i386",
      "SANITIZER=address"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=i386",
      "-e",
      "FUZZING_ENGINE=libfuzzer",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/libfuzzer-address-i386",
      "-e",
      "SANITIZER=address",
      "-t",
      "gcr.io/oss-fuzz-base/base-runner",
      "bash",
      "-c",
      "test_all.py || (echo \"********************************************************************************\\nBuild checks failed.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer address --engine libfuzzer --architecture i386 test-project\\npython infra/helper.py check_build --sanitizer address --engine libfuzzer --architecture i386 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "build-check-libfuzzer-address-i386"
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "ARCHITECTURE=i386",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-address-i386",
      "SANITIZER=address"
    ],
    "args": [
      "bash",
      "-c",
      "targets_list > /workspace/targets.list.address"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "cd /workspace/out/libfuzzer-address-i386 && zip -r test-project-address-202001010000.zip *"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/srcmap.json",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/out/libfuzzer-address-i386/test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/targets.list.address",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/curl",
    "args": [
      "-H",
      "Content-Type: text/plain",
      "-X",
      "PUT",
      "-d",
      "test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "rm -r /workspace/out/libfuzzer-address-i386"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=aarch64",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-address-aarch64",
      "SANITIZER=address"
    ],
    "args": [
      "run",
      "--platform",
      "linux/arm64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=aarch64",
      "-e",
      "FUZZING_ENGINE=libfuzzer",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/libfuzzer-address-aarch64",
      "-e",
      "SANITIZER=address",
      "-t",
      "gcr.io/oss-fuzz/test-project-aarch64",
      "bash",
      "-c",
      "rm -r /out && cd /src && cd /src && mkdir -p /workspace/out/libfuzzer-address-aarch64 && compile || (echo \"********************************************************************************\\nFailed to build.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer address --engine libfuzzer --architecture aarch64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "compile-libfuzzer-address-aarch64"
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=aarch64",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-address-aarch64",
      "SANITIZER=address"
    ],
    "args": [
      "run",
      "--platform",
      "linux/arm64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=aarch64",
      "-e",
      "FUZZING_ENGINE=libfuzzer",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/libfuzzer-address-aarch64",
      "-e",
      "SANITIZER=address",
      "-t",
      "gcr.io/oss-fuzz-base/base-runner",
      "bash",
      "-c",
      "test_all.py || (echo \"********************************************************************************\\nBuild checks failed.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer address --engine libfuzzer --architecture aarch64 test-project\\npython infra/helper.py check_build --sanitizer address --engine libfuzzer --architecture aarch64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "build-check-libfuzzer-address-aarch64"
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "ARCHITECTURE=aarch64",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-address-aarch64",
      "SANITIZER=address"
    ],
    "args": [
      "bash",
      "-c",
      "targets_list > /workspace/targets.list.address"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "cd /workspace/out/libfuzzer-address-aarch64 && zip -r test-project-address-202001010000.zip *"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/srcmap.json",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/out/libfuzzer-address-aarch64/test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/targets.list.address",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/curl",
    "args": [
      "-H",
      "Content-Type: text/plain",
      "-X",
      "PUT",
      "-d",
      "test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "rm -r /workspace/out/libfuzzer-address-aarch64"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-memory-x86_64",
      "SANITIZER=memory"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=x86_64",
      "-e",
      "FUZZING_ENGINE=libfuzzer",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/libfuzzer-memory-x86_64",
      "-e",
      "SANITIZER=memory",
      "-t",
      "gcr.io/oss-fuzz/test-project",
      "bash",
      "-c",
      "rm -r /out && cd /src && cd /src && mkdir -p /workspace/out/libfuzzer-memory-x86_64 && compile || (echo \"********************************************************************************\\nFailed to build.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer memory --engine libfuzzer --architecture x86_64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "compile-libfuzzer-memory-x86_64"
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-memory-x86_64",
      "SANITIZER=memory"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=x86_64",
      "-e",
      "FUZZING_ENGINE=libfuzzer",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/libfuzzer-memory-x86_64",
      "-e",
      "SANITIZER=memory",
      "-t",
      "gcr.io/oss-fuzz-base/base-runner",
      "bash",
      "-c",
      "test_all.py || (echo \"********************************************************************************\\nBuild checks failed.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer memory --engine libfuzzer --architecture x86_64 test-project\\npython infra/helper.py check_build --sanitizer memory --engine libfuzzer --architecture x86_64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "build-check-libfuzzer-memory-x86_64"
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-memory-x86_64",
      "SANITIZER=memory"
    ],
    "args": [
      "bash",
      "-c",
      "targets_list > /workspace/targets.list.memory"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "cd /workspace/out/libfuzzer-memory-x86_64 && zip -r test-project-memory-202001010000.zip *"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/srcmap.json",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/out/libfuzzer-memory-x86_64/test-project-memory-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/targets.list.memory",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/curl",
    "args": [
      "-H",
      "Content-Type: text/plain",
      "-X",
      "PUT",
      "-d",
      "test-project-memory-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "rm -r /workspace/out/libfuzzer-memory-x86_64"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-undefined-x86_64",
      "SANITIZER=undefined"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=x86_64",
      "-e",
      "FUZZING_ENGINE=libfuzzer",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/libfuzzer-undefined-x86_64",
      "-e",
      "SANITIZER=undefined",
      "-t",
      "gcr.io/oss-fuzz/test-project",
      "bash",
      "-c",
      "rm -r /out && cd /src && cd /src && mkdir -p /workspace/out/libfuzzer-undefined-x86_64 && compile || (echo \"********************************************************************************\\nFailed to build.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer undefined --engine libfuzzer --architecture x86_64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "compile-libfuzzer-undefined-x86_64"
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-undefined-x86_64",
      "SANITIZER=undefined"
    ],
    "args": [
      "run",
      "--platform",
      "linux/amd64",
      "-v",
      "/workspace:/workspace",
      "--privileged",
      "--cap-add=all",
      "-e",
      "ARCHITECTURE=x86_64",
      "-e",
      "FUZZING_ENGINE=libfuzzer",
      "-e",
      "FUZZING_LANGUAGE=c++",
      "-e",
      "HOME=/root",
      "-e",
      "OUT=/workspace/out/libfuzzer-undefined-x86_64",
      "-e",
      "SANITIZER=undefined",
      "-t",
      "gcr.io/oss-fuzz-base/base-runner",
      "bash",
      "-c",
      "test_all.py || (echo \"********************************************************************************\\nBuild checks failed.\\nTo reproduce, run:\\npython infra/helper.py build_image test-project\\npython infra/helper.py build_fuzzers --sanitizer undefined --engine libfuzzer --architecture x86_64 test-project\\npython infra/helper.py check_build --sanitizer undefined --engine libfuzzer --architecture x86_64 test-project\\n********************************************************************************\" && false)"
    ],
    "id": "build-check-libfuzzer-undefined-x86_64"
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "ARCHITECTURE=x86_64",
      "FUZZING_ENGINE=libfuzzer",
      "FUZZING_LANGUAGE=c++",
      "HOME=/root",
      "OUT=/workspace/out/libfuzzer-undefined-x86_64",
      "SANITIZER=undefined"
    ],
    "args": [
      "bash",
      "-c",
      "targets_list > /workspace/targets.list.undefined"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "cd /workspace/out/libfuzzer-undefined-x86_64 && zip -r test-project-undefined-202001010000.zip *"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/srcmap.json",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/out/libfuzzer-undefined-x86_64/test-project-undefined-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/targets.list.undefined",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/curl",
    "args": [
      "-H",
      "Content-Type: text/plain",
      "-X",
      "PUT",
      "-d",
      "test-project-undefined-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "rm -r /workspace/out/libfuzzer-undefined-x86_64"
    ]
  }
]