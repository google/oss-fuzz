diff --git a/Packet++/header/LdapLayer.h b/Packet++/header/LdapLayer.h
index 4485d17..b986f12 100644
--- a/Packet++/header/LdapLayer.h
+++ b/Packet++/header/LdapLayer.h
@@ -439,7 +439,7 @@ namespace pcpp
 		static constexpr int diagnotsticsMessageIndex = 2;
 		static constexpr int referralIndex = 3;
 
-		static constexpr uint8_t referralTagType = 3;
+		uint8_t referralTagType = 3;
 
 		LdapResponseLayer() = default;
 		LdapResponseLayer(std::unique_ptr<Asn1Record> asn1Record, uint8_t* data, size_t dataLen, Layer* prevLayer,
@@ -595,7 +595,7 @@ namespace pcpp
 	protected:
 		friend LdapLayer* LdapLayer::parseLdapMessage(uint8_t* data, size_t dataLen, Layer* prevLayer, Packet* packet);
 
-		static constexpr int serverSaslCredentialsTagType = 7;
+		int serverSaslCredentialsTagType = 7;
 
 		LdapBindResponseLayer(std::unique_ptr<Asn1Record> asn1Record, uint8_t* data, size_t dataLen, Layer* prevLayer,
 		                      Packet* packet)
diff --git a/Tests/Fuzzers/ossfuzz.sh b/Tests/Fuzzers/ossfuzz.sh
index 6d461ff..c984c97 100755
--- a/Tests/Fuzzers/ossfuzz.sh
+++ b/Tests/Fuzzers/ossfuzz.sh
@@ -12,7 +12,13 @@ make -j$(nproc)
 # Build PcapPlusPlus linking statically against the built libpcap
 cd $SRC/PcapPlusPlus
 LIBPCAP_PATH=$SRC/libpcap/
-cmake -DPCAPPP_BUILD_FUZZERS=ON -DPCAPPP_BUILD_TESTS=OFF -DPCAPPP_BUILD_EXAMPLES=OFF -DPCAP_INCLUDE_DIR="${LIBPCAP_PATH}/" -DPCAP_LIBRARY="${LIBPCAP_PATH}/libpcap.a" -S . -B $TARGETS_DIR
+
+PCAPPP_BUILD_TESTS_VALUE="ON"
+if [ "${SANITIZER:-}" = "memory" ]; then
+    PCAPPP_BUILD_TESTS_VALUE="OFF"
+fi
+
+cmake -DPCAPPP_BUILD_FUZZERS=ON -DPCAPPP_BUILD_TESTS=$PCAPPP_BUILD_TESTS_VALUE -DPCAPPP_BUILD_EXAMPLES=OFF -DPCAP_INCLUDE_DIR="${LIBPCAP_PATH}/" -DPCAP_LIBRARY="${LIBPCAP_PATH}/libpcap.a" -S . -B $TARGETS_DIR
 cmake --build $TARGETS_DIR -j
 
 # Copy target and options
